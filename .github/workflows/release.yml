name: Release and Publish

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Get version
        id: get_version
        run: |
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.get_version.outputs.VERSION }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Ensure no stray test.js files
        run: |
          offenders=$(git ls-files | grep -E '(^|/)test\.js$' || true)
          if [ -n "$offenders" ]; then
            echo "Forbidden files detected (test.js):"
            echo "$offenders"
            exit 1
          fi

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Create release zip
        run: |
          cd dist
          zip -r ../schemata-${{ steps.get_version.outputs.VERSION }}.zip .

      - name: Check if release exists
        id: check_release
        uses: f2calv/gha-check-release-exists@v2
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            ReleaseName: ${{ steps.get_version.outputs.VERSION }}

      - name: Create Release
        if: steps.check_release.outputs.ReleaseExists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.SCHEMATA_PAT }}
          name: ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          files: schemata-${{ steps.get_version.outputs.VERSION }}.zip

      - name: Check if package exists
        id: check_package
        run: |
          PACKAGE_NAME="@nostrability/schemata"
          VERSION=${{ steps.get_version.outputs.VERSION }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          if npm view $PACKAGE_NAME@$VERSION version > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: steps.check_package.outputs.exists == 'false'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          pnpm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 
